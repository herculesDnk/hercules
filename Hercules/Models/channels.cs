//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hercules.Models
{
    using System;
    using System.Collections.Generic;
    
    public partial class channels
    {
        public int ID { get; set; }
        public Nullable<int> SiteID { get; set; }
        public Nullable<int> ChannelNumber { get; set; }
        public Nullable<bool> IsAnalogue { get; set; }
        public Nullable<bool> IgnoreLoggerValues { get; set; }
        public Nullable<bool> Is4to20 { get; set; }
        public string ChannelType { get; set; }
        public Nullable<double> LoggerCalibrationMultiplier { get; set; }
        public Nullable<double> LoggerCalibrationOffset { get; set; }
        public Nullable<double> CalibrationMultiplier { get; set; }
        public Nullable<double> CalibrationOffset { get; set; }
        public Nullable<int> FlowX { get; set; }
        public Nullable<int> FlowY { get; set; }
        public Nullable<int> FlowXSec { get; set; }
        public Nullable<int> FlowYSec { get; set; }
        public string ChannelName { get; set; }
        public Nullable<double> LastValue { get; set; }
        public Nullable<System.DateTime> LastDataTime { get; set; }
        public Nullable<System.DateTime> LastChangeTime { get; set; }
        public Nullable<bool> InvertNegativeValues { get; set; }
        public Nullable<bool> ZeroNegativeValues { get; set; }
        public string ChannelUnits { get; set; }
        public Nullable<bool> IgnoreLoggerMeterValues { get; set; }
        public Nullable<bool> StoreLoggerMeterValues { get; set; }
        public Nullable<System.DateTime> LoggerMeterReadDate { get; set; }
        public Nullable<double> LoggerMeterReadValue { get; set; }
        public Nullable<double> HighAlarmLevel { get; set; }
        public Nullable<double> LowAlarmLevel { get; set; }
        public Nullable<double> MNFAlarmLevel { get; set; }
        public Nullable<double> ROCAlarmLevel { get; set; }
        public Nullable<System.DateTime> DGMeterReadDate { get; set; }
        public Nullable<double> DGMeterReadValue { get; set; }
        public Nullable<double> LastDataValue { get; set; }
        public Nullable<bool> LoggerIs4to20 { get; set; }
        public Nullable<double> MeterFactor { get; set; }
        public Nullable<long> LoggerPulseTotal { get; set; }
        public Nullable<System.DateTime> LoggerPulseTotalDate { get; set; }
        public Nullable<int> LoggerMeterDials { get; set; }
        public Nullable<int> LoggerPulsesThisPeriod { get; set; }
        public Nullable<int> OpenChannelHeaderID { get; set; }
        public Nullable<bool> LUT { get; set; }
        public Nullable<System.DateTime> overrangeoktime { get; set; }
        public Nullable<System.DateTime> underrangeoktime { get; set; }
        public string SensorSerialNumber { get; set; }
        public Nullable<double> RangeMin { get; set; }
        public Nullable<double> RangeMax { get; set; }
        public string YAxisGroupBy { get; set; }
        public Nullable<double> YAxisMinValue { get; set; }
        public Nullable<bool> YAxisLeft { get; set; }
    }
}
